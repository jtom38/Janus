// <auto-generated />
using System;
using Janus.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Janus.Persistence.Migrations
{
    [DbContext(typeof(JanusDbContext))]
    [Migration("20181120135632_DbUpdate")]
    partial class DbUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024");

            modelBuilder.Entity("Janus.Domain.Entities.Categories", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddedBy");

                    b.Property<DateTime?>("DateAdded");

                    b.Property<Guid>("TenantID");

                    b.Property<string>("Value");

                    b.HasKey("ID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Janus.Domain.Entities.Clients", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("CompanyName");

                    b.Property<DateTime>("DateTimeLogged");

                    b.Property<string>("MainContact");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("State");

                    b.Property<Guid>("TenantID");

                    b.HasKey("ID");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Janus.Domain.Entities.ComputerID", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BiosManufacturer");

                    b.Property<string>("BiosName");

                    b.Property<string>("BiosSerialNumber");

                    b.Property<string>("BiosStatus");

                    b.Property<string>("BiosVersion");

                    b.Property<string>("ComputerName");

                    b.Property<DateTime>("DateTimeUpdated");

                    b.Property<string>("Domain");

                    b.Property<Guid>("HardDriveID");

                    b.Property<string>("Manufacturer");

                    b.Property<string>("Model");

                    b.Property<Guid>("NetworkID");

                    b.Property<string>("RAM");

                    b.Property<string>("SkuNumber");

                    b.Property<Guid>("TenantID");

                    b.Property<Guid>("TicketID");

                    b.Property<Guid>("WindowsUpdatesID");

                    b.HasKey("ID");

                    b.ToTable("ComputerIDs");
                });

            modelBuilder.Entity("Janus.Domain.Entities.HardDrives", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ComputerID");

                    b.Property<string>("DateTimeAdded");

                    b.Property<string>("DateTimeEdited");

                    b.Property<string>("Description");

                    b.Property<string>("FileSystem");

                    b.Property<string>("FreeSpace");

                    b.Property<string>("Name");

                    b.Property<string>("SerialNumber");

                    b.Property<Guid>("TenantID");

                    b.Property<string>("TotalSpace");

                    b.HasKey("ID");

                    b.HasIndex("ComputerID");

                    b.ToTable("HardDrives");
                });

            modelBuilder.Entity("Janus.Domain.Entities.Network", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ComputerID");

                    b.Property<string>("DNS01");

                    b.Property<string>("DNS02");

                    b.Property<DateTime?>("DateTimeAdded");

                    b.Property<string>("Description");

                    b.Property<bool>("DhcpEnabled");

                    b.Property<string>("DhcpServer");

                    b.Property<string>("DnsDomain");

                    b.Property<string>("Gateway");

                    b.Property<string>("IpAddressV4");

                    b.Property<string>("IpAddressV6");

                    b.Property<string>("MacAddress");

                    b.Property<string>("SubNet");

                    b.Property<Guid>("TenantID");

                    b.HasKey("ID");

                    b.HasIndex("ComputerID");

                    b.ToTable("Network");
                });

            modelBuilder.Entity("Janus.Domain.Entities.Status", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddedBy");

                    b.Property<DateTime>("DateAdded");

                    b.Property<int>("Order");

                    b.Property<Guid>("TenantID");

                    b.Property<string>("Value");

                    b.HasKey("ID");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("Janus.Domain.Entities.SubCategories", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddedBy");

                    b.Property<DateTime?>("DateAdded");

                    b.Property<Guid>("TenantID");

                    b.Property<string>("Value");

                    b.HasKey("ID");

                    b.ToTable("SubCategories");
                });

            modelBuilder.Entity("Janus.Domain.Entities.Techs", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateLogged");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<Guid>("TenantID");

                    b.HasKey("ID");

                    b.ToTable("Techs");
                });

            modelBuilder.Entity("Janus.Domain.Entities.TenantID", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CompanyName");

                    b.Property<DateTime>("DateLogged");

                    b.HasKey("ID");

                    b.ToTable("TenantIDs");
                });

            modelBuilder.Entity("Janus.Domain.Entities.Ticket", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CategoryID");

                    b.Property<Guid?>("ComputerID");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateTimeCreated");

                    b.Property<DateTime>("DateTimeEdited");

                    b.Property<DateTime>("DateTimeFinished");

                    b.Property<DateTime>("DateTimeStarted");

                    b.Property<string>("Message");

                    b.Property<Guid?>("StatusID");

                    b.Property<Guid?>("SubCategoryID");

                    b.Property<string>("SubmittedBy");

                    b.Property<Guid>("TenantID");

                    b.Property<int>("TicketNumber");

                    b.Property<string>("TicketOwner");

                    b.Property<string>("Title");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("ComputerID");

                    b.HasIndex("StatusID");

                    b.HasIndex("SubCategoryID");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Janus.Domain.Entities.TicketComments", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DateTimeCreated");

                    b.Property<string>("Message");

                    b.Property<string>("PostedBy");

                    b.Property<Guid>("TicketID");

                    b.HasKey("ID");

                    b.HasIndex("TicketID");

                    b.ToTable("TicketComments");
                });

            modelBuilder.Entity("Janus.Domain.Entities.WindowsUpdates", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Caption");

                    b.Property<Guid?>("ComputerID");

                    b.Property<DateTime>("DateTimeAdded");

                    b.Property<string>("Description");

                    b.Property<string>("HostName");

                    b.Property<string>("HotFixID");

                    b.Property<string>("InstalledOn");

                    b.Property<Guid>("TenantID");

                    b.HasKey("ID");

                    b.HasIndex("ComputerID");

                    b.ToTable("WindowsUpdates");
                });

            modelBuilder.Entity("Janus.Domain.Entities.HardDrives", b =>
                {
                    b.HasOne("Janus.Domain.Entities.ComputerID", "Computer")
                        .WithMany("HardDrives")
                        .HasForeignKey("ComputerID");
                });

            modelBuilder.Entity("Janus.Domain.Entities.Network", b =>
                {
                    b.HasOne("Janus.Domain.Entities.ComputerID", "Computer")
                        .WithMany("Network")
                        .HasForeignKey("ComputerID");
                });

            modelBuilder.Entity("Janus.Domain.Entities.Ticket", b =>
                {
                    b.HasOne("Janus.Domain.Entities.Categories", "Category")
                        .WithMany("Tickets")
                        .HasForeignKey("CategoryID");

                    b.HasOne("Janus.Domain.Entities.ComputerID", "Computer")
                        .WithMany("Tickets")
                        .HasForeignKey("ComputerID");

                    b.HasOne("Janus.Domain.Entities.Status", "Status")
                        .WithMany("Tickets")
                        .HasForeignKey("StatusID");

                    b.HasOne("Janus.Domain.Entities.SubCategories", "SubCategory")
                        .WithMany("Tickets")
                        .HasForeignKey("SubCategoryID");
                });

            modelBuilder.Entity("Janus.Domain.Entities.TicketComments", b =>
                {
                    b.HasOne("Janus.Domain.Entities.Ticket", "Tickets")
                        .WithMany("TicketComments")
                        .HasForeignKey("TicketID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Janus.Domain.Entities.WindowsUpdates", b =>
                {
                    b.HasOne("Janus.Domain.Entities.ComputerID", "Computer")
                        .WithMany("WindowsUpdates")
                        .HasForeignKey("ComputerID");
                });
#pragma warning restore 612, 618
        }
    }
}
